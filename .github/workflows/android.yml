name: Android CI - android-asset-webshell (local index.html + remote webjs/sw)

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
  workflow_dispatch:
    inputs:
      base_url:
        description: 'Base URL to fetch webjs.js and sw.js'
        required: false
        default: 'https://szzdmj.github.io/'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 使用 JDK 17，避免 sdkmanager (cmdline-tools/latest) 的 class version 61 报错
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Verify Java runtime (should be 17)
        shell: bash
        run: |
          set -euo pipefail
          echo "JAVA_HOME=${JAVA_HOME}"
          which java || true
          java -version

      - name: Sanity check project tree
        run: |
          echo "== repo root =="
          ls -la
          echo "== expect android-asset-webshell/ structure =="
          ls -la android-asset-webshell || { echo "ERROR: android-asset-webshell/ not found"; exit 1; }

      - name: Configure Android SDK and local.properties
        shell: bash
        run: |
          set -euo pipefail
          ANDROID_SDK_ROOT_DEFAULT="/usr/local/lib/android/sdk"
          echo "Using ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT_DEFAULT}"
          echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT_DEFAULT}" >> "$GITHUB_ENV"
          echo "ANDROID_HOME=${ANDROID_SDK_ROOT_DEFAULT}" >> "$GITHUB_ENV"

          # 强制使用 JDK 17（覆盖可能残留的 11）
          export JAVA_HOME="${JAVA_HOME_17_X64:-$JAVA_HOME}"
          export PATH="$JAVA_HOME/bin:$PATH"
          echo "[before sdkmanager] java -version:"
          java -version

          # 写入工程级 local.properties（Gradle/AGP 读取 sdk.dir）
          LP="android-asset-webshell/local.properties"
          {
            echo "sdk.dir=${ANDROID_SDK_ROOT_DEFAULT}"
          } > "${LP}"
          echo "==== local.properties ===="
          cat "${LP}"

          # 接受许可证并安装必要组件（确保在 JDK 17 环境下执行）
          yes | "${ANDROID_SDK_ROOT_DEFAULT}/cmdline-tools/latest/bin/sdkmanager" --licenses >/dev/null 2>&1 || true
          "${ANDROID_SDK_ROOT_DEFAULT}/cmdline-tools/latest/bin/sdkmanager" \
            "platform-tools" "build-tools;33.0.2" "platforms;android-33"

      - name: Prepare assets — use local index.html/id-shim.js; download webjs.js & sw.js
        env:
          BASE_URL: ${{ github.event.inputs.base_url || 'https://szzdmj.github.io/' }}
        shell: bash
        run: |
          set -euo pipefail
          A="android-asset-webshell/app/src/main/assets"
          mkdir -p "$A"

          echo "Verifying local required files (no remote fallback at runtime):"
          test -f "$A/index.html" || { echo "ERROR: $A/index.html missing"; exit 1; }
          test -f "$A/id-shim.js" || { echo "ERROR: $A/id-shim.js missing"; exit 1; }

          echo "Using local index.html (first lines):"
          sed -n '1,40p' "$A/index.html" || true

          echo "Downloading web assets from BASE_URL=${BASE_URL}"
          for f in webjs.js sw.js; do
            url="${BASE_URL%/}/${f}"
            dest="${A}/${f}"
            echo "Fetching ${url} -> ${dest}"
            curl -fsSL --retry 3 --connect-timeout 10 -o "${dest}" "${url}"
          done

          echo "Assets present:"
          ls -l "$A"

      # 使用 Gradle 7.6.1（与 AGP 7.4.2 兼容）
      - name: Build Debug
        uses: gradle/gradle-build-action@v3
        with:
          build-root-directory: android-asset-webshell
          gradle-version: 7.6.1
          arguments: assembleDebug --stacktrace --info --no-daemon

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: android-asset-webshell/app/build/outputs/apk/debug/*.apk

      - name: Build Release
        uses: gradle/gradle-build-action@v3
        with:
          build-root-directory: android-asset-webshell
          gradle-version: 7.6.1
          arguments: assembleRelease --stacktrace --info --no-daemon

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: android-asset-webshell/app/build/outputs/apk/release/*.apk
